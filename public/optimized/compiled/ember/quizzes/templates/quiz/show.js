define(["ember","compiled/ember/shared/helpers/common"],function(s){s.TEMPLATES["quiz/show"]=s.Handlebars.template(function(e,t,a,h,p){function n(s,e){var t,h,p,n="";return e.buffer.push('\n    <div class="quiz-preview">\n      <h3>\n        <i class="icon-warning" aria-label="Warning"></i>\n        '),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"preview_of_draft_version","This is a preview of the draft version of the quiz",p):G.call(s,"t","preview_of_draft_version","This is a preview of the draft version of the quiz",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n      </h3>\n    </div>\n  "),n}function u(s,e){var t="";return e.buffer.push('\n    <div class="row-fluid">\n      <div class="span12 quiz-description user_content">\n        '),e.buffer.push(q(a._triageMustache.call(s,"description",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:s},contexts:[s],types:["ID"],data:e}))),e.buffer.push("\n      </div>\n    </div>\n  "),t}function o(s,e){var t,h="";return e.buffer.push("\n          "),t=a._triageMustache.call(s,"timeLimitWithMinutes",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),h}function r(s,e){var t,h,p,n="";return e.buffer.push("\n          "),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"no_time_limit","None",p):G.call(s,"t","no_time_limit","None",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),n}function f(s,e){var t,h,p,n="";return e.buffer.push("\n          "),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"unlimited","Unlimited",p):G.call(s,"t","unlimited","Unlimited",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),n}function c(s,e){var t,h="";return e.buffer.push("\n          "),t=a._triageMustache.call(s,"allowedAttempts",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),h}function l(s,e){var t,h,p,n="";return e.buffer.push("\n        <dt>"),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"access_code","Access Code",p):G.call(s,"t","access_code","Access Code",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("</dt>\n        <dd>"),t=a._triageMustache.call(s,"accessCode",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push("</dd>\n      "),n}function i(s,e){var t,h,p,n="";return e.buffer.push("\n        <dt>"),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"score_to_keep","Score To Keep",p):G.call(s,"t","score_to_keep","Score To Keep",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("</dt>\n        <dd>"),t=a._triageMustache.call(s,"tScoringPolicy",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push("</dd>\n      "),n}function d(s,e){var t,h,p,n="";return e.buffer.push("\n          "),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"always","Always",p):G.call(s,"t","always","Always",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),n}function b(s,e){var t,h="";return e.buffer.push("\n          "),t=a["if"].call(s,"showResultsAfterLastAttempt",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(22,y,e),fn:v.program(20,T,e),contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),h}function T(s,e){var t,h,p,n="";return e.buffer.push("\n            "),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"show_after_last_attempt","After Last Attempt",p):G.call(s,"t","show_after_last_attempt","After Last Attempt",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n          "),n}function y(s,e){var t,h,p,n="";return e.buffer.push("\n            "),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"never","Never",p):G.call(s,"t","never","Never",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n          "),n}function m(s,e){var t,h="";return e.buffer.push("\n          "),t=a._triageMustache.call(s,"ipFilter",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),h}function I(s,e){var t,h,p,n="";return e.buffer.push("\n          "),h=a.t||s&&s.t,p={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:s},contexts:[s,s],types:["STRING","STRING"],data:e},t=h?h.call(s,"none","None",p):G.call(s,"t","none","None",p),(t||0===t)&&e.buffer.push(t),e.buffer.push("\n        "),n}function x(s,e){var t,h,p="";return e.buffer.push("\n      <tr>\n        "),e.buffer.push(q((t=a.render||s&&s.render,h={hash:{},hashTypes:{},hashContexts:{},contexts:[s,s],types:["STRING","ID"],data:e},t?t.call(s,"due_date_table_row","",h):G.call(s,"render","due_date_table_row","",h)))),e.buffer.push("\n      </tr>\n    "),p}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,s.Handlebars.helpers),p=p||{};var z,S,N,R="",G=a.helperMissing,q=this.escapeExpression,v=this;return p.buffer.push('<div class="quiz-overview">\n  '),z=a["if"].call(t,"isPreview",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(1,n,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("\n\n  "),z=a["if"].call(t,"description",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(3,u,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push('\n\n  <div class="row-fluid quiz-attributes quiz-attributes-teacher">\n    <dl class="span4 quiz-attribute-column">\n      <dt>'),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"quiz_type","Quiz Type",N):G.call(t,"t","quiz_type","Quiz Type",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>"),z=a._triageMustache.call(t,"tQuizType",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dd>\n\n      <dt>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"points","Points",N):G.call(t,"t","points","Points",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>"),z=a._triageMustache.call(t,"pointsPossible",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dd>\n\n      <dt>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"time_limit","Time Limit",N):G.call(t,"t","time_limit","Time Limit",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>\n        "),z=a["if"].call(t,"timeLimit",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(7,r,p),fn:v.program(5,o,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push('\n      </dd>\n    </dl>\n\n    <dl class="span4 quiz-attribute-column">\n      <dt>'),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"assignment_group","Assignment Group",N):G.call(t,"t","assignment_group","Assignment Group",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>"),z=a._triageMustache.call(t,"assignmentGroup.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dd>\n      <dt>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"attempts","Attempts",N):G.call(t,"t","attempts","Attempts",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>\n        "),z=a["if"].call(t,"unlimitedAllowedAttempts",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(11,c,p),fn:v.program(9,f,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("\n      </dd>\n\n      "),z=a["if"].call(t,"accessCode",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(13,l,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push('\n    </dl>\n\n    <dl class="span4 quiz-attribute-column">\n      '),z=a["if"].call(t,"multipleAttemptsAllowed",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(15,i,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("\n\n      <dt>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"show_responses","Show Responses",N):G.call(t,"t","show_responses","Show Responses",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>\n        "),z=a["if"].call(t,"alwaysShowResults",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(19,b,p),fn:v.program(17,d,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("\n      </dd>\n\n      <dt>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"ip_filter","IP Filter",N):G.call(t,"t","ip_filter","IP Filter",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</dt>\n      <dd>\n        "),z=a["if"].call(t,"ipFilter",{hash:{},hashTypes:{},hashContexts:{},inverse:v.program(26,I,p),fn:v.program(24,m,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push('\n      </dd>\n    </dl>\n  </div>\n\n  <table class="quiz-table table" id="due-dates-table">\n    <thead>\n      <tr>\n        <th>'),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"due","Due",N):G.call(t,"t","due","Due",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</th>\n        <th>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"for","For",N):G.call(t,"t","for","For",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</th>\n        <th>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"available_from","Available From",N):G.call(t,"t","available_from","Available From",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</th>\n        <th>"),S=a.t||t&&t.t,N={hash:{scope:"quizzes.templates.quiz.show.hbs"},hashTypes:{scope:"STRING"},hashContexts:{scope:t},contexts:[t,t],types:["STRING","STRING"],data:p},z=S?S.call(t,"until","Until",N):G.call(t,"t","until","Until",N),(z||0===z)&&p.buffer.push(z),p.buffer.push("</th>\n      </tr>\n    </thead>\n    <tbody>\n    "),z=a.each.call(t,"allDates",{hash:{},hashTypes:{},hashContexts:{},inverse:v.noop,fn:v.program(28,x,p),contexts:[t],types:["ID"],data:p}),(z||0===z)&&p.buffer.push(z),p.buffer.push("\n    </tbody>\n  </table>\n\n  "),p.buffer.push(q((S=a.partial||t&&t.partial,N={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:p},S?S.call(t,"quiz/legacy_submissions",N):G.call(t,"partial","quiz/legacy_submissions",N)))),p.buffer.push("\n</div>\n"),R})});