(function(){var e={}.hasOwnProperty,r=function(r,t){function n(){this.constructor=r}for(var o in t)e.call(t,o)&&(r[o]=t[o]);return n.prototype=t.prototype,r.prototype=new n,r.__super__=t.prototype,r};define(["i18n!user","underscore","Backbone"],function(e,t,n){var o,l;return o=function(n){function o(){return l=o.__super__.constructor.apply(this,arguments)}return r(o,n),o.prototype.modelType="user",o.prototype.resourceName="users",o.prototype.errorMap={name:{blank:e.t("errors.required","Required"),too_long:e.t("errors.too_long","Can't exceed %{max} characters",{max:255})},self_enrollment_code:{blank:e.t("errors.required","Required"),invalid:e.t("errors.invalid_code","Invalid code"),already_enrolled:e.t("errors.already_enrolled","You are already enrolled in this course"),full:e.t("errors.course_full","This course is full")},terms_of_use:{accepted:e.t("errors.terms","You must agree to the terms")}},o.prototype.enrollments=function(e,r){return t.where(this.get("enrollments"),e,r)},o.prototype.hasEnrollmentType=function(e){return!!this.enrollments({type:e},!0)},o.prototype.hasEnrollmentRole=function(e){return!!this.enrollments({role:e},!0)},o.prototype.findEnrollmentByRole=function(e){return this.enrollments({role:e},!0)},o.prototype.allEnrollmentsByType=function(e){return this.enrollments({type:e})},o.prototype.allEnrollmentsByRole=function(e){return this.enrollments({role:e})},o.prototype.pending=function(e){return t.any(this.get("enrollments"),function(r){var t;return r.role===e&&("creation_pending"===(t=r.enrollment_state)||"invited"===t)})},o.prototype.sectionEditableEnrollments=function(){return t.select(this.get("enrollments"),function(e){return!t.include(["DesignerEnrollment","ObserverEnrollment"],e.type)})},o}(n.Model)})}).call(this);