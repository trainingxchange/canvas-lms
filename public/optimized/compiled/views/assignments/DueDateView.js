(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},t={}.hasOwnProperty,r=function(e,r){function o(){this.constructor=e}for(var n in r)t.call(r,n)&&(e[n]=r[n]);return o.prototype=r.prototype,e.prototype=new o,e.__super__=r.prototype,e};define(["i18n!overrides","Backbone","underscore","jst/assignments/DueDateView","jquery","jquery.toJSON","jquery.instructure_date_and_time","jquery.instructure_forms"],function(o,n,i,a,s){var u,d;return u=function(n){function u(){return this.updateOverride=e(this.updateOverride,this),this.validateBeforeSave=e(this.validateBeforeSave,this),this.getFormValues=e(this.getFormValues,this),this.reRenderSections=e(this.reRenderSections,this),this.showRemoveButton=e(this.showRemoveButton,this),this.hideRemoveButton=e(this.hideRemoveButton,this),this.removeDueDate=e(this.removeDueDate,this),this.afterRender=e(this.afterRender,this),d=u.__super__.constructor.apply(this,arguments)}return r(u,n),u.prototype.template=a,u.prototype.tagName="li",u.prototype.className="due-date-row",u.prototype.events={"click .remove-link":"removeDueDate"},u.prototype.afterRender=function(){return this.$el.find(".date_field").datetime_field()},u.prototype.removeDueDate=function(e){return e.preventDefault(),this.trigger("remove",this.model),this.remove()},u.prototype.hideRemoveButton=function(){return this.$el.find(".remove-link").hide()},u.prototype.showRemoveButton=function(){return this.$el.find(".remove-link").show()},u.prototype.reRenderSections=function(e){return i.each(this.options.views,function(t){return t.sections=e,t.render()})},u.prototype.getFormValues=function(){var e,r,o,n,i,a,u,d,c;for(n=this.$el.find("form").toJSON(),d=["due_at","lock_at","unlock_at"],a=0,u=d.length;u>a;a++)e=d[a],n[e]=s.unfudgeDateForProfileTimezone(n[e]);o=this.validateBeforeSave(n,{}),this.$el.hideErrors(),c=o.assignmentOverrides;for(r in c)t.call(c,r)&&(i=c[r],this.$("[name="+r+"]").errorBox(i));return n},u.prototype.validateBeforeSave=function(e,t){var r,n,a,s;return n={},e&&(a=e.lock_at,s=e.unlock_at,r=e.due_at,a&&r&&r>a&&(n.lock_at=o.t("lock_date_before_due_date","Lock date cannot be before due date")),s&&r&&s>r?n.unlock_at=o.t("unlock_date_after_due_date","Unlock date cannot be after due date"):s&&a&&s>a&&(n.unlock_at=o.t("unlock_date_after_lock_date","Unlock date cannot be after lock date"))),i.keys(n).length>0&&(t.assignmentOverrides=n),t},u.prototype.updateOverride=function(){return this.model.set(this.getFormValues())},u}(n.View)})}).call(this);