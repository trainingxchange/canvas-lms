(function(){var e={}.hasOwnProperty,s=function(s,t){function n(){this.constructor=s}for(var r in t)e.call(t,r)&&(s[r]=t[r]);return n.prototype=t.prototype,s.prototype=new n,s.__super__=t.prototype,s};define(["i18n!groups","Backbone","compiled/views/groups/manage/GroupCategoryDetailView","compiled/views/groups/manage/GroupsView","compiled/views/groups/manage/UnassignedUsersView","compiled/views/groups/manage/AddUnassignedMenu","jst/groups/manage/groupCategory","compiled/jquery.rails_flash_notifications","jquery.disableWhileLoading"],function(e,t,n,r,i,o,u){var a,g,p;return g=t.View,a=function(t){function a(){return p=a.__super__.constructor.apply(this,arguments)}return s(a,t),a.prototype.template=u,a.child("groupCategoryDetailView","[data-view=groupCategoryDetail]"),a.child("unassignedUsersView","[data-view=unassignedUsers]"),a.child("groupsView","[data-view=groups]"),a.prototype.els={".filterable":"$filter",".filterable-unassigned-users":"$filterUnassignedUsers",".unassigned-users-heading":"$unassignedUsersHeading",".groups-with-count":"$groupsHeading"},a.prototype.initialize=function(e){var s,t,r,i;return this.groups=this.model.groups(),null==(t=e.groupCategoryDetailView)&&(e.groupCategoryDetailView=new n({parentView:this,model:this.model,collection:this.groups})),null==(r=e.groupsView)&&(e.groupsView=this.groupsView(e)),null==(i=e.unassignedUsersView)&&(e.unassignedUsersView=this.unassignedUsersView(e)),(s=this.model.get("progress"))&&this.model.progressModel.set(s),a.__super__.initialize.apply(this,arguments)},a.prototype.groupsView=function(){var e,s;return e=null,ENV.IS_LARGE_ROSTER&&(s=this.model.unassignedUsers(),e=new o({collection:s})),new r({collection:this.groups,addUnassignedMenu:e})},a.prototype.unassignedUsersView=function(){return ENV.IS_LARGE_ROSTER?!1:new i({category:this.model,collection:this.model.unassignedUsers(),groupsCollection:this.groups})},a.prototype.attach=function(){var e=this;return this.model.on("destroy",this.remove,this),this.model.on("change",function(){return e.groupsView.updateDetails()}),this.model.on("change:unassigned_users_count",this.setUnassignedHeading,this),this.groups.on("add remove reset",this.setGroupsHeading,this),this.model.progressModel.on("change:url",function(){return e.model.progressModel.set({completion:0})}),this.model.progressModel.on("change",this.render),this.model.on("progressResolved",function(){return e.model.fetch({success:function(){return e.model.groups().fetch(),e.model.unassignedUsers().fetch(),e.render()}})})},a.prototype.cacheEls=function(){return a.__super__.cacheEls.apply(this,arguments),this.groupsView.$externalFilter=this.$filter,this.unassignedUsersView.$externalFilter=this.$filterUnassignedUsers},a.prototype.afterRender=function(){return this.setUnassignedHeading(),this.setGroupsHeading()},a.prototype.setUnassignedHeading=function(){var s,t;return s=null!=(t=this.model.unassignedUsersCount())?t:0,this.unassignedUsersView&&this.unassignedUsersView.render(),this.$unassignedUsersHeading.text(this.model.get("allows_multiple_memberships")?e.t("everyone","Everyone (%{count})",{count:s}):"student"===ENV.group_user_type?e.t("unassigned_students","Unassigned Students (%{count})",{count:s}):e.t("unassigned_users","Unassigned Users (%{count})",{count:s}))},a.prototype.setGroupsHeading=function(){var s;return s=this.model.groupsCount(),this.$groupsHeading.text(e.t("groups_count","Groups (%{count})",{count:s}))},a.prototype.toJSON=function(){var e;return e=this.model.present(),e.ENV=ENV,e.groupsAreSearchable=ENV.IS_LARGE_ROSTER&&!e.randomlyAssignStudentsInProgress,e},a}(g)})}).call(this);