(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},t={}.hasOwnProperty,n=function(e,n){function r(){this.constructor=e}for(var s in n)t.call(n,s)&&(e[s]=n[s]);return r.prototype=n.prototype,e.prototype=new r,e.__super__=n.prototype,e};define(["i18n!course_settings","jquery","underscore","compiled/views/DialogBaseView","compiled/views/courses/roster/RosterDialogMixin","jst/courses/roster/LinkToStudentsView","compiled/jquery.whenAll","jquery.disableWhileLoading"],function(t,r,s,o,i,u){var l,a;return l=function(o){function l(){return this.update=e(this.update,this),a=l.__super__.constructor.apply(this,arguments)}return n(l,o),l.mixin(i),l.prototype.dialogOptions={id:"link_students",title:t.t("titles.link_to_students","Link to Students")},l.prototype.render=function(){var e,n,r,o,i,l,a=this;for(e=this.model.toJSON(),e.studentsUrl=ENV.SEARCH_URL,this.$el.html(u(e)),this.students=[],this.$("#student_input").contextSearch({contexts:ENV.CONTEXTS,placeholder:t.t("link_students_placeholder","Enter a student name"),change:function(e){return a.students=e},selector:{baseData:{type:"user",context:"course_"+ENV.course.id+"_students",exclude:[this.model.get("id")],skip_visibility_checks:!0},noExpand:!0,browser:{data:{per_page:100,types:["user"]}}}}),r=this.$("#student_input").data("token_input"),r.$fakeInput.css("width","100%"),l=this.model.allEnrollmentsByType("ObserverEnrollment"),o=0,i=l.length;i>o;o++)n=l[o],n.observed_user&&s.any(n.observed_user.enrollments)&&r.addToken({value:n.observed_user.id,text:n.observed_user.name,data:n.observed_user});return this},l.prototype.getUserData=function(e){return r.get("/api/v1/courses/"+ENV.course.id+"/users/"+e,{include:["enrollments"]})},l.prototype.update=function(e){var n,o,i,u,l,a,d,c,p,_,h,f,m,y,g,v,E,k,w=this;for(e.preventDefault(),o=[],a=this.model.allEnrollmentsByType("ObserverEnrollment"),l=a[0],m=s.filter(a,function(e){return!e.associated_user_id}),n=s.compact(s.pluck(a,"associated_user_id")),h=s.difference(this.students,n),f=s.difference(n,this.students),_=[],h.length&&(p=r.Deferred(),o.push(p.promise()),i=0),g=0,E=h.length;E>g;g++)c=h[g],this.getUserData(c).done(function(e){var t,n,o,u,a,d,c;for(u=[],o=s.map(e.enrollments,function(e){return e.course_section_id}),d=0,c=o.length;c>d;d++)n=o[d],a="/api/v1/sections/"+n+"/enrollments",t={enrollment:{user_id:w.model.get("id"),associated_user_id:e.id,type:l.type,limit_privileges_to_course_section:l.limit_priveleges_to_course_section}},l.role!==l.type&&(t.enrollment.role=l.role),u.push(r.ajaxJSON(a,"POST",t,function(t){return t.observed_user=e,_.push(t)}));return r.when.apply(r,u).done(function(){return i+=1,i===h.length?p.resolve():void 0})});for(d=s.filter(a,function(e){return s.include(f,e.associated_user_id)}),v=0,k=d.length;k>v;v++)u=d[v],y=""+ENV.COURSE_ROOT_URL+"/unenroll/"+u.id,o.push(r.ajaxJSON(y,"DELETE"));return this.disable(r.when.apply(r,o).done(function(){return w.updateEnrollments(_,d),r.flashMessage(t.t("flash.links","Student links successfully updated"))}).fail(function(){return r.flashError(t.t("flash.linkError","Something went wrong updating the user's student links. Please try again later."))}).always(function(){return w.close()}))},l}(o)})}).call(this);