(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}};define(["underscore","jquery"],function(t,n){var i;return i=function(){function i(t,n){this.$tree=t,null==n&&(n=!0),this.doneFetchingEvents=e(this.doneFetchingEvents,this),this.checkboxEvents=e(this.checkboxEvents,this),n&&this.bindEvents()}return i.prototype.bindEvents=function(){return this.$tree.on("change","input[type=checkbox]",this.checkboxEvents),this.$tree.on("doneFetchingCheckboxes",this.doneFetchingEvents)},i.prototype.checkboxEvents=function(e){var t,i;return e.preventDefault(),t=n(e.currentTarget),i=t.is(":checked"),this.updateTreeItemCheckedAttribute(t,i),this.checkCheckboxes({checkboxes:this.findChildrenCheckboxes(t),setTo:i,triggerChange:!0}),this.checkSiblingCheckboxes(t),this.syncLinkedResource(t),this.$tree.find("[aria-selected=true]").length?this.$tree.focus():void 0},i.prototype.doneFetchingEvents=function(e,t){var i;return e.stopPropagation(),i=n(t),this.checkCheckboxes({checkboxes:this.findChildrenCheckboxes(i),setTo:i.is(":checked"),triggerChange:!1})},i.prototype.checkCheckboxes=function(e){var i,r,c,h;return null==e&&(e={}),i=e.checkboxes,c=e.setTo,h=e.triggerChange,r=e.afterEach,i.each(function(){var e;return e=n(this),t.defer(function(){return e.prop({indeterminate:!1,checked:c}),e.closest("[role=treeitem]").attr("aria-checked",c),h&&e.trigger("change"),r?r():void 0})})},i.prototype.updateTreeItemCheckedAttribute=function(e,t){return e.closest("[role=treeitem]").attr("aria-checked",t)},i.prototype.findChildrenCheckboxes=function(e){var t;return t=e.parents(".treeitem-heading").siblings("[role=group]").find("[role=treeitem] input[type=checkbox]")},i.prototype.checkSiblingCheckboxes=function(e,t){var n;return null==t&&(t=!1),n=this.findParentCheckbox(e),this.updateTreeItemCheckedAttribute(e,t?"mixed":e.is(":checked")),n?t||!this.siblingsAreTheSame(e)?(n.prop({indeterminate:!0,checked:!1}),this.checkSiblingCheckboxes(n,!0)):(n.prop({indeterminate:!1,checked:e.is(":checked")}),this.checkSiblingCheckboxes(n,!1)):void 0},i.prototype.siblingsAreTheSame=function(e){var t;return t=!0,e.closest("[role=treeitem]").siblings().find("input[type=checkbox]").each(function(){return n(this).is(":checked")!==e.is(":checked")?t=!1:void 0}),t},i.prototype.findParentCheckbox=function(e){var t;return t=e.parents("[role=treeitem]").eq(1).find("input[type=checkbox]").first(),0===t.length?!1:t},i.prototype.syncLinkedResource=function(e){var t,n,i=this;return n=e.data("linkedResourceProperty"),n?(t=this.$tree.find("[name='"+n+"']"),this.checkCheckboxes({checkboxes:t,setTo:e.is(":checked"),triggerChange:!1,afterEach:function(){return i.checkSiblingCheckboxes(t)}})):void 0},i}()})}).call(this);