(function(){var t={}.hasOwnProperty,o=function(o,e){function r(){this.constructor=o}for(var n in e)t.call(e,n)&&(o[n]=e[n]);return r.prototype=e.prototype,o.prototype=new r,o.__super__=e.prototype,o};define(["react","underscore","compiled/react_files/components/FilesApp","compiled/str/splitAssetString","compiled/models/Folder","compiled/collections/FilesCollection","Backbone"],function(t,e,r,n,i,p,c){var s,d;return s=function(e){function n(){return d=n.__super__.constructor.apply(this,arguments)}return o(n,e),n.prototype.initialize=function(t){if(this.options=t,!this.options.contextType||!this.options.contextId)throw new Error("contextType and contextId are required")},n.prototype.routes={"":"root",folder:"redirectToRoot","folder*folderPath":"showFolder",search:"search"},n.prototype.root=function(){return this.showFolder("/")},n.prototype.redirectToRoot=function(){return this.navigate("",{trigger:!0,replace:!0})},n.prototype.showFolder=function(t){var o=this;return i.resolvePath(this.options.contextType,this.options.contextId,t).then(function(e){var r,n;return n=e[0],window.currentFolder=r=e[e.length-1],o._renderApp({contextType:o.options.contextType,contextId:o.options.contextId,baseUrl:c.history.root,showBreadcrumb:!0,folderPath:t,rootFolder:n,currentFolder:r})})},n.prototype._renderApp=function(o){return t.renderComponent(r(o),document.getElementById("content"))},n.prototype.search=function(){var t;return t=new p,t.url="/api/v1/"+this.options.contextType+"/"+this.options.contextId+"/files",this._renderApp({showBreadcrumb:!1,searchResults:t,contextType:this.options.contextType,contextId:this.options.contextId})},n}(c.Router)})}).call(this);